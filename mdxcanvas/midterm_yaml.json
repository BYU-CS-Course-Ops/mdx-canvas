[
    {
        "access_code": "start-final",
        "allowed_attempts": 1,
        "assignment_group_id": 100080,
        "cant_go_back": false,
        "description": "<h3>Before taking the exam</h3>\n<p>Please take the course completion survey: Course Completion Survey</p>\n<h2>Final Exam Instructions</h2>\n<p><strong>Please read and understand the following instructions before taking the final exam (scroll down).</strong></p>\n<p>This is an exam. You are on your honor to treat this exam appropriately. You are not allowed to consult any material or people during this exam.</p>\n<p>Please do not discuss the content of this exam with others.</p>\n<p>You have 240 minutes (4 hours) to take this test. Most students will finish in under 90 minutes. If you need an accommodation, contact your instructor before you start the exam.</p>\n<p>Prepare your exam space. Find a location where you can work uninterrupted and free from distraction for the full test-taking period. </p>\n<p>You are encouraged to have scratch paper available. </p>\n<p>Turn off your phone. Close all applications except your browser, and close all tabs except this one.</p>\n<p>Only start the test once you intend to take and complete it. To start the test, you will need the passcode: <strong>start-final</strong>. </p>\n<p>Good luck!</p>",
        "due_at": "2024-04-24T23:59:00-06:00",
        "lock_at": "2024-04-24T23:59:00-06:00",
        "name": "Final",
        "one_question_at_a_time": false,
        "one_time_results": false,
        "published": false,
        "questions": [
            {
                "question_text": "<h2>Instructions</h2>\n<p>The questions on this exam are divided into 8 sections.</p>\n<p>Each section begins with a section header that presents a programming question, followed by True/False questions that present possible solutions to the problem in the section header. If the possible solution is valid, mark it as True. If it is not a valid solution, mark it as False.\u00a0</p>\n<p><strong>There may be more than one valid solution in each section.</strong></p>\n<p>You can think of each section as a single select-all-that-apply problem, where you get a point for each item you identify correctly as being a valid or invalid solution to the problem.</p>",
                "question_type": "text_only_question"
            },
            {
                "question_text": "<h1>Questions 1-4</h1>\n<p>Given the program <code style=\"color: #000000\">counting.py</code>, where the number of uppercase, lowercase, and digits are printed, which implementation(s) of <code style=\"color: #000000\">count_characters</code> correctly produce the following execution?</p>\n<p><strong><code style=\"color: #000000\">counting.py</code></strong></p>\n<div class=\"codehilite\" style=\"background: #f8f8f8\"><pre style=\"line-height: 125%;\"><span></span><code><span style=\"color: #008000; font-weight: bold\">def</span> <span style=\"color: #0000FF\">count_characters</span>(input_string): <span style=\"color: #666666\">...</span>\n\n\n<span style=\"color: #008000; font-weight: bold\">def</span> <span style=\"color: #0000FF\">main</span>():\n    input_string <span style=\"color: #666666\">=</span> <span style=\"color: #008000\">input</span>(<span style=\"color: #BA2121\">'Input: '</span>)\n    counts <span style=\"color: #666666\">=</span> count_characters(input_string)\n    <span style=\"color: #008000\">print</span>(counts)\n\n\n<span style=\"color: #008000; font-weight: bold\">if</span> <span style=\"color: #19177C\">__name__</span> <span style=\"color: #666666\">==</span> <span style=\"color: #BA2121\">'__main__'</span>:\n    main()\n</code></pre></div>\n<p><strong>Execution</strong></p>\n<div class=\"codehilite\" style=\"background: #f8f8f8\"><pre style=\"line-height: 125%;\"><span></span><code>python counting.py\nInput: I LOVE pie (not 3.14)\n(5, 6, 3)\n</code></pre></div>",
                "question_type": "text_only_question"
            },
            {
                "question_text": "<div class=\"codehilite\" style=\"background: #f8f8f8\"><pre style=\"line-height: 125%;\"><span></span><code><span style=\"color: #008000; font-weight: bold\">def</span> <span style=\"color: #0000FF\">count_characters</span>(input_string):\n    upper_count, lower_count, digit_count <span style=\"color: #666666\">=</span> <span style=\"color: #666666\">0</span>, <span style=\"color: #666666\">0</span>, <span style=\"color: #666666\">0</span>\n    <span style=\"color: #008000; font-weight: bold\">for</span> char <span style=\"color: #AA22FF; font-weight: bold\">in</span> input_string:\n        <span style=\"color: #008000; font-weight: bold\">if</span> char<span style=\"color: #666666\">.</span>upper():\n            upper_count <span style=\"color: #666666\">+=</span> <span style=\"color: #666666\">1</span>\n        <span style=\"color: #008000; font-weight: bold\">if</span> char<span style=\"color: #666666\">.</span>lower():\n            lower_count <span style=\"color: #666666\">+=</span> <span style=\"color: #666666\">1</span>\n        <span style=\"color: #008000; font-weight: bold\">if</span> char<span style=\"color: #666666\">.</span>isdigit():\n            digit_count <span style=\"color: #666666\">+=</span> <span style=\"color: #666666\">1</span>\n    <span style=\"color: #008000; font-weight: bold\">return</span> (upper_count, lower_count, digit_count)\n</code></pre></div>",
                "question_type": "true_false_question",
                "points_possible": 1,
                "answers": [
                    {
                        "answer_text": "True",
                        "answer_weight": 100
                    },
                    {
                        "answer_text": "False",
                        "answer_weight": 0
                    }
                ]
            },
            {
                "question_text": "<div class=\"codehilite\" style=\"background: #f8f8f8\"><pre style=\"line-height: 125%;\"><span></span><code><span style=\"color: #008000; font-weight: bold\">def</span> <span style=\"color: #0000FF\">count_characters</span>(input_string):\n    upper_count <span style=\"color: #666666\">=</span> input_string<span style=\"color: #666666\">.</span>count(<span style=\"color: #BA2121\">'isupper'</span>)\n    lower_count <span style=\"color: #666666\">=</span> input_string<span style=\"color: #666666\">.</span>count(<span style=\"color: #BA2121\">'islower'</span>)\n    digit_count <span style=\"color: #666666\">=</span> input_string<span style=\"color: #666666\">.</span>count(<span style=\"color: #BA2121\">'isdigit'</span>)\n    <span style=\"color: #008000; font-weight: bold\">return</span> (upper_count, lower_count, digit_count)\n</code></pre></div>",
                "question_type": "true_false_question",
                "points_possible": 1,
                "answers": [
                    {
                        "answer_text": "True",
                        "answer_weight": 100
                    },
                    {
                        "answer_text": "False",
                        "answer_weight": 0
                    }
                ]
            },
            {
                "question_text": "<div class=\"codehilite\" style=\"background: #f8f8f8\"><pre style=\"line-height: 125%;\"><span></span><code><span style=\"color: #008000; font-weight: bold\">def</span> <span style=\"color: #0000FF\">count_characters</span>(input_string):\n    upper_count, lower_count, digit_count <span style=\"color: #666666\">=</span> <span style=\"color: #666666\">0</span>, <span style=\"color: #666666\">0</span>, <span style=\"color: #666666\">0</span>\n    <span style=\"color: #008000; font-weight: bold\">for</span> word <span style=\"color: #AA22FF; font-weight: bold\">in</span> input_string<span style=\"color: #666666\">.</span>split():\n        <span style=\"color: #008000; font-weight: bold\">if</span> word<span style=\"color: #666666\">.</span>isupper():\n            upper_count <span style=\"color: #666666\">+=</span> <span style=\"color: #666666\">1</span>\n        <span style=\"color: #008000; font-weight: bold\">elif</span> word<span style=\"color: #666666\">.</span>islower():\n            lower_count <span style=\"color: #666666\">+=</span> <span style=\"color: #666666\">1</span>\n        <span style=\"color: #008000; font-weight: bold\">elif</span> word<span style=\"color: #666666\">.</span>isdigit():\n            digit_count <span style=\"color: #666666\">+=</span> <span style=\"color: #666666\">1</span>\n    <span style=\"color: #008000; font-weight: bold\">return</span> (upper_count, lower_count, digit_count)\n</code></pre></div>",
                "question_type": "true_false_question",
                "points_possible": 1,
                "answers": [
                    {
                        "answer_text": "True",
                        "answer_weight": 100
                    },
                    {
                        "answer_text": "False",
                        "answer_weight": 0
                    }
                ]
            },
            {
                "question_text": "<div class=\"codehilite\" style=\"background: #f8f8f8\"><pre style=\"line-height: 125%;\"><span></span><code><span style=\"color: #008000; font-weight: bold\">def</span> <span style=\"color: #0000FF\">count_characters</span>(input_string):\n    upper_count, lower_count, digit_count <span style=\"color: #666666\">=</span> <span style=\"color: #666666\">0</span>, <span style=\"color: #666666\">0</span>, <span style=\"color: #666666\">0</span>\n    <span style=\"color: #008000; font-weight: bold\">for</span> char <span style=\"color: #AA22FF; font-weight: bold\">in</span> input_string:\n        <span style=\"color: #008000; font-weight: bold\">if</span> char<span style=\"color: #666666\">.</span>isupper():\n            upper_count <span style=\"color: #666666\">+=</span> <span style=\"color: #666666\">1</span>\n        <span style=\"color: #008000; font-weight: bold\">elif</span> char<span style=\"color: #666666\">.</span>islower():\n            lower_count <span style=\"color: #666666\">+=</span> <span style=\"color: #666666\">1</span>\n        <span style=\"color: #008000; font-weight: bold\">elif</span> char<span style=\"color: #666666\">.</span>isdigit():\n            digit_count <span style=\"color: #666666\">+=</span> <span style=\"color: #666666\">1</span>\n    <span style=\"color: #008000; font-weight: bold\">return</span> (upper_count, lower_count, digit_count)\n</code></pre></div>",
                "question_type": "true_false_question",
                "points_possible": 1,
                "answers": [
                    {
                        "answer_text": "True",
                        "answer_weight": 100
                    },
                    {
                        "answer_text": "False",
                        "answer_weight": 0
                    }
                ]
            },
            {
                "question_text": "<h1>Questions 5-8</h1>\n<p>Write a program that replaces all the spaces with underscores, and all the lowercase 'e's with uppercase 'E's.</p>\n<p>Which solutions are valid implementations of this program?</p>",
                "question_type": "text_only_question"
            },
            {
                "question_text": "<div class=\"codehilite\" style=\"background: #f8f8f8\"><pre style=\"line-height: 125%;\"><span></span><code><span style=\"color: #008000; font-weight: bold\">import</span> <span style=\"color: #0000FF; font-weight: bold\">sys</span>\n\n\n<span style=\"color: #008000; font-weight: bold\">def</span> <span style=\"color: #0000FF\">fix</span>(original_string):\n    <span style=\"color: #008000; font-weight: bold\">return</span> original_string<span style=\"color: #666666\">.</span>replace(<span style=\"color: #BA2121\">' '</span>, <span style=\"color: #BA2121\">'_'</span>)<span style=\"color: #666666\">.</span>replace(<span style=\"color: #BA2121\">'e'</span>, <span style=\"color: #BA2121\">'E'</span>)\n\n\n<span style=\"color: #008000; font-weight: bold\">if</span> <span style=\"color: #19177C\">__name__</span> <span style=\"color: #666666\">==</span> <span style=\"color: #BA2121\">'__main__'</span>:\n    <span style=\"color: #008000\">print</span>(fix(sys<span style=\"color: #666666\">.</span>argv[<span style=\"color: #666666\">1</span>]))\n</code></pre></div>",
                "question_type": "true_false_question",
                "points_possible": 1,
                "answers": [
                    {
                        "answer_text": "True",
                        "answer_weight": 100
                    },
                    {
                        "answer_text": "False",
                        "answer_weight": 0
                    }
                ]
            },
            {
                "question_text": "<div class=\"codehilite\" style=\"background: #f8f8f8\"><pre style=\"line-height: 125%;\"><span></span><code><span style=\"color: #008000; font-weight: bold\">import</span> <span style=\"color: #0000FF; font-weight: bold\">sys</span>\n\n\n<span style=\"color: #008000; font-weight: bold\">def</span> <span style=\"color: #0000FF\">fix</span>(original_string):\n    modified_string <span style=\"color: #666666\">=</span> original_string<span style=\"color: #666666\">.</span>replace(<span style=\"color: #BA2121\">' '</span>, <span style=\"color: #BA2121\">'_'</span>)\n    modified_string<span style=\"color: #666666\">.</span>replace(<span style=\"color: #BA2121\">'e'</span>, <span style=\"color: #BA2121\">'E'</span>)\n    <span style=\"color: #008000; font-weight: bold\">return</span> modified_string\n\n\n<span style=\"color: #008000; font-weight: bold\">if</span> <span style=\"color: #19177C\">__name__</span> <span style=\"color: #666666\">==</span> <span style=\"color: #BA2121\">'__main__'</span>:\n    <span style=\"color: #008000\">print</span>(fix(sys<span style=\"color: #666666\">.</span>argv[<span style=\"color: #666666\">1</span>]))\n</code></pre></div>",
                "question_type": "true_false_question",
                "points_possible": 1,
                "answers": [
                    {
                        "answer_text": "True",
                        "answer_weight": 100
                    },
                    {
                        "answer_text": "False",
                        "answer_weight": 0
                    }
                ]
            },
            {
                "question_text": "<div class=\"codehilite\" style=\"background: #f8f8f8\"><pre style=\"line-height: 125%;\"><span></span><code><span style=\"color: #008000; font-weight: bold\">import</span> <span style=\"color: #0000FF; font-weight: bold\">sys</span>\n\n\n<span style=\"color: #008000; font-weight: bold\">def</span> <span style=\"color: #0000FF\">fix</span>(original_string):\n    modified_string <span style=\"color: #666666\">=</span> original_string<span style=\"color: #666666\">.</span>replace(<span style=\"color: #BA2121\">' '</span>, <span style=\"color: #BA2121\">'_'</span>)\n    modified_string <span style=\"color: #666666\">=</span> original_string<span style=\"color: #666666\">.</span>replace(<span style=\"color: #BA2121\">'e'</span>, <span style=\"color: #BA2121\">'E'</span>)\n    <span style=\"color: #008000; font-weight: bold\">return</span> modified_string\n\n\n<span style=\"color: #008000; font-weight: bold\">if</span> <span style=\"color: #19177C\">__name__</span> <span style=\"color: #666666\">==</span> <span style=\"color: #BA2121\">'__main__'</span>:\n    <span style=\"color: #008000\">print</span>(fix(sys<span style=\"color: #666666\">.</span>argv[<span style=\"color: #666666\">1</span>]))\n</code></pre></div>",
                "question_type": "true_false_question",
                "points_possible": 1,
                "answers": [
                    {
                        "answer_text": "True",
                        "answer_weight": 100
                    },
                    {
                        "answer_text": "False",
                        "answer_weight": 0
                    }
                ]
            },
            {
                "question_text": "<div class=\"codehilite\" style=\"background: #f8f8f8\"><pre style=\"line-height: 125%;\"><span></span><code><span style=\"color: #008000; font-weight: bold\">import</span> <span style=\"color: #0000FF; font-weight: bold\">sys</span>\n\n\n<span style=\"color: #008000; font-weight: bold\">def</span> <span style=\"color: #0000FF\">fix</span>(original_string):\n    modified_string <span style=\"color: #666666\">=</span> <span style=\"color: #BA2121\">''</span>\n    <span style=\"color: #008000; font-weight: bold\">for</span> char <span style=\"color: #AA22FF; font-weight: bold\">in</span> original_string:\n        <span style=\"color: #008000; font-weight: bold\">if</span> char <span style=\"color: #666666\">==</span> <span style=\"color: #BA2121\">' '</span>:\n            modified_string <span style=\"color: #666666\">+=</span> <span style=\"color: #BA2121\">'_'</span>\n        <span style=\"color: #008000; font-weight: bold\">elif</span> char <span style=\"color: #666666\">==</span> <span style=\"color: #BA2121\">'e'</span>:\n            modified_string <span style=\"color: #666666\">+=</span> <span style=\"color: #BA2121\">'E'</span>\n    <span style=\"color: #008000; font-weight: bold\">return</span> modified_string\n\n\n<span style=\"color: #008000; font-weight: bold\">if</span> <span style=\"color: #19177C\">__name__</span> <span style=\"color: #666666\">==</span> <span style=\"color: #BA2121\">'__main__'</span>:\n    <span style=\"color: #008000\">print</span>(fix(sys<span style=\"color: #666666\">.</span>argv[<span style=\"color: #666666\">1</span>]))\n</code></pre></div>",
                "question_type": "true_false_question",
                "points_possible": 1,
                "answers": [
                    {
                        "answer_text": "True",
                        "answer_weight": 100
                    },
                    {
                        "answer_text": "False",
                        "answer_weight": 0
                    }
                ]
            },
            {
                "question_text": "<h1>Questions 9-13</h1>\n<p>The following code is found in the file <code style=\"color: #000000\">print_words.py</code>.</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8\"><pre style=\"line-height: 125%;\"><span></span><code><span style=\"color: #008000; font-weight: bold\">import</span> <span style=\"color: #0000FF; font-weight: bold\">sys</span>\n\n\n<span style=\"color: #008000; font-weight: bold\">def</span> <span style=\"color: #0000FF\">get_plain_words</span>(text):\n    punctuations <span style=\"color: #666666\">=</span> <span style=\"color: #BA2121\">'.,!?'</span>\n    words <span style=\"color: #666666\">=</span> text<span style=\"color: #666666\">.</span>split()\n    stripped_words <span style=\"color: #666666\">=</span> []\n\n    <span style=\"color: #008000; font-weight: bold\">for</span> word <span style=\"color: #AA22FF; font-weight: bold\">in</span> words:\n        stripped_word <span style=\"color: #666666\">=</span> word<span style=\"color: #666666\">.</span>strip(punctuations)<span style=\"color: #666666\">.</span>lower()\n        stripped_words<span style=\"color: #666666\">.</span>append(stripped_word)\n\n    <span style=\"color: #008000; font-weight: bold\">return</span> stripped_words\n\n\n<span style=\"color: #008000; font-weight: bold\">if</span> <span style=\"color: #19177C\">__name__</span> <span style=\"color: #666666\">==</span> <span style=\"color: #BA2121\">'__main__'</span>:\n    text <span style=\"color: #666666\">=</span> sys<span style=\"color: #666666\">.</span>argv[<span style=\"color: #666666\">1</span>]\n    result <span style=\"color: #666666\">=</span> get_plain_words(text)\n    <span style=\"color: #008000; font-weight: bold\">for</span> word <span style=\"color: #AA22FF; font-weight: bold\">in</span> result:\n        <span style=\"color: #008000\">print</span>(word)\n</code></pre></div>\n<p>Which options demonstrate a valid execution of <code style=\"color: #000000\">print_words.py</code>.</p>",
                "question_type": "text_only_question"
            },
            {
                "question_text": "<div class=\"codehilite\" style=\"background: #f8f8f8\"><pre style=\"line-height: 125%;\"><span></span><code>python print_words.py 'Hello! How are you today?'\nhello\nhow\nare\nyou\ntoday\n</code></pre></div>",
                "question_type": "true_false_question",
                "points_possible": 1,
                "answers": [
                    {
                        "answer_text": "True",
                        "answer_weight": 100
                    },
                    {
                        "answer_text": "False",
                        "answer_weight": 0
                    }
                ]
            },
            {
                "question_text": "<div class=\"codehilite\" style=\"background: #f8f8f8\"><pre style=\"line-height: 125%;\"><span></span><code>python print_words.py Do you know the muffin man? \ndo\nyou\nknow\nthe\nmuffin\nman?\n</code></pre></div>",
                "question_type": "true_false_question",
                "points_possible": 1,
                "answers": [
                    {
                        "answer_text": "True",
                        "answer_weight": 100
                    },
                    {
                        "answer_text": "False",
                        "answer_weight": 0
                    }
                ]
            },
            {
                "question_text": "<div class=\"codehilite\" style=\"background: #f8f8f8\"><pre style=\"line-height: 125%;\"><span></span><code>python print_words.py \"3.1415 begins pi.\"\n31415\nbegins\npi\n</code></pre></div>",
                "question_type": "true_false_question",
                "points_possible": 1,
                "answers": [
                    {
                        "answer_text": "True",
                        "answer_weight": 100
                    },
                    {
                        "answer_text": "False",
                        "answer_weight": 0
                    }
                ]
            },
            {
                "question_text": "<div class=\"codehilite\" style=\"background: #f8f8f8\"><pre style=\"line-height: 125%;\"><span></span><code>python print_words.py \"My favorite color is BLUE.\"\nMy\nfavorite\ncolor\nis\nBLUE\n</code></pre></div>",
                "question_type": "true_false_question",
                "points_possible": 1,
                "answers": [
                    {
                        "answer_text": "True",
                        "answer_weight": 100
                    },
                    {
                        "answer_text": "False",
                        "answer_weight": 0
                    }
                ]
            },
            {
                "question_text": "<div class=\"codehilite\" style=\"background: #f8f8f8\"><pre style=\"line-height: 125%;\"><span></span><code>python print_words.py \"To get bit to move, use bit.move()\"\nto\nget\nbit\nto\nmove\nuse\nbit.move()\n</code></pre></div>",
                "question_type": "true_false_question",
                "points_possible": 1,
                "answers": [
                    {
                        "answer_text": "True",
                        "answer_weight": 100
                    },
                    {
                        "answer_text": "False",
                        "answer_weight": 0
                    }
                ]
            },
            {
                "question_text": "<h1>Questions 14-17</h1>\n<p>Select all of the following programs that can increase the number in the middle of each CSV row by 1.</p>\n<p><strong>Execution</strong></p>\n<div class=\"codehilite\" style=\"background: #f8f8f8\"><pre style=\"line-height: 125%;\"><span></span><code>python add_one.py input.txt output.txt\n</code></pre></div>\n<p><strong><code style=\"color: #000000\">input.txt</code></strong></p>\n<div class=\"codehilite\" style=\"background: #f8f8f8\"><pre style=\"line-height: 125%;\"><span></span><code>quail,10,Provo\nrobin,3,Provo\njunco,1,Orem\n</code></pre></div>\n<p><strong><code style=\"color: #000000\">output.txt</code></strong></p>\n<div class=\"codehilite\" style=\"background: #f8f8f8\"><pre style=\"line-height: 125%;\"><span></span><code>quail,11,Provo\nrobin,4,Provo\njunco,2,Orem\n</code></pre></div>",
                "question_type": "text_only_question"
            },
            {
                "question_text": "<div class=\"codehilite\" style=\"background: #f8f8f8\"><pre style=\"line-height: 125%;\"><span></span><code><span style=\"color: #008000; font-weight: bold\">import</span> <span style=\"color: #0000FF; font-weight: bold\">sys</span>\n\n\n<span style=\"color: #008000; font-weight: bold\">def</span> <span style=\"color: #0000FF\">add_one</span>(line):\n    tokens <span style=\"color: #666666\">=</span> line<span style=\"color: #666666\">.</span>split(<span style=\"color: #BA2121\">','</span>)\n    new_tokens <span style=\"color: #666666\">=</span> []\n    <span style=\"color: #008000; font-weight: bold\">for</span> token <span style=\"color: #AA22FF; font-weight: bold\">in</span> tokens:\n        <span style=\"color: #008000; font-weight: bold\">if</span> token<span style=\"color: #666666\">.</span>isdigit():\n            token <span style=\"color: #666666\">=</span> <span style=\"color: #008000\">str</span>(<span style=\"color: #008000\">int</span>(token) <span style=\"color: #666666\">+</span> <span style=\"color: #666666\">1</span>)\n        new_tokens<span style=\"color: #666666\">.</span>append(token)\n    <span style=\"color: #008000; font-weight: bold\">return</span> <span style=\"color: #BA2121\">','</span><span style=\"color: #666666\">.</span>join(new_tokens)\n\n\n<span style=\"color: #008000; font-weight: bold\">def</span> <span style=\"color: #0000FF\">main</span>(input_file, output_file):\n    <span style=\"color: #008000; font-weight: bold\">with</span> <span style=\"color: #008000\">open</span>(input_file) <span style=\"color: #008000; font-weight: bold\">as</span> file:\n        lines <span style=\"color: #666666\">=</span> file<span style=\"color: #666666\">.</span>readlines()\n\n    new_lines <span style=\"color: #666666\">=</span> []\n    <span style=\"color: #008000; font-weight: bold\">for</span> line <span style=\"color: #AA22FF; font-weight: bold\">in</span> lines:\n        new_lines<span style=\"color: #666666\">.</span>append(add_one(line))\n\n    <span style=\"color: #008000; font-weight: bold\">with</span> <span style=\"color: #008000\">open</span>(output_file, <span style=\"color: #BA2121\">'w'</span>) <span style=\"color: #008000; font-weight: bold\">as</span> file:\n        file<span style=\"color: #666666\">.</span>writelines(new_lines)\n\n\n<span style=\"color: #008000; font-weight: bold\">if</span> <span style=\"color: #19177C\">__name__</span> <span style=\"color: #666666\">==</span> <span style=\"color: #BA2121\">'__main__'</span>:\n    main(sys<span style=\"color: #666666\">.</span>argv[<span style=\"color: #666666\">1</span>], sys<span style=\"color: #666666\">.</span>argv[<span style=\"color: #666666\">2</span>])\n</code></pre></div>",
                "question_type": "true_false_question",
                "points_possible": 1,
                "answers": [
                    {
                        "answer_text": "True",
                        "answer_weight": 100
                    },
                    {
                        "answer_text": "False",
                        "answer_weight": 0
                    }
                ]
            },
            {
                "question_text": "<div class=\"codehilite\" style=\"background: #f8f8f8\"><pre style=\"line-height: 125%;\"><span></span><code><span style=\"color: #008000; font-weight: bold\">import</span> <span style=\"color: #0000FF; font-weight: bold\">sys</span>\n\n\n<span style=\"color: #008000; font-weight: bold\">def</span> <span style=\"color: #0000FF\">main</span>(input_file, output_file):\n    <span style=\"color: #008000; font-weight: bold\">with</span> <span style=\"color: #008000\">open</span>(input_file) <span style=\"color: #008000; font-weight: bold\">as</span> file:\n        text <span style=\"color: #666666\">=</span> file<span style=\"color: #666666\">.</span>read()\n\n    new_text <span style=\"color: #666666\">=</span> <span style=\"color: #BA2121\">''</span>\n    <span style=\"color: #008000; font-weight: bold\">for</span> c <span style=\"color: #AA22FF; font-weight: bold\">in</span> text:\n        <span style=\"color: #008000; font-weight: bold\">if</span> c<span style=\"color: #666666\">.</span>isdigit():\n            c <span style=\"color: #666666\">=</span> c <span style=\"color: #666666\">+</span> <span style=\"color: #666666\">1</span>\n        new_text <span style=\"color: #666666\">+=</span> c\n\n    <span style=\"color: #008000; font-weight: bold\">with</span> <span style=\"color: #008000\">open</span>(output_file, <span style=\"color: #BA2121\">'w'</span>) <span style=\"color: #008000; font-weight: bold\">as</span> file:\n        file<span style=\"color: #666666\">.</span>write(new_text)\n\n\n<span style=\"color: #008000; font-weight: bold\">if</span> <span style=\"color: #19177C\">__name__</span> <span style=\"color: #666666\">==</span> <span style=\"color: #BA2121\">'__main__'</span>:\n    main(sys<span style=\"color: #666666\">.</span>argv[<span style=\"color: #666666\">1</span>], sys<span style=\"color: #666666\">.</span>argv[<span style=\"color: #666666\">2</span>])\n</code></pre></div>",
                "question_type": "true_false_question",
                "points_possible": 1,
                "answers": [
                    {
                        "answer_text": "True",
                        "answer_weight": 100
                    },
                    {
                        "answer_text": "False",
                        "answer_weight": 0
                    }
                ]
            },
            {
                "question_text": "<div class=\"codehilite\" style=\"background: #f8f8f8\"><pre style=\"line-height: 125%;\"><span></span><code><span style=\"color: #008000; font-weight: bold\">import</span> <span style=\"color: #0000FF; font-weight: bold\">sys</span>\n\n\n<span style=\"color: #008000; font-weight: bold\">def</span> <span style=\"color: #0000FF\">add_one</span>(line):\n    tokens <span style=\"color: #666666\">=</span> line<span style=\"color: #666666\">.</span>split(<span style=\"color: #BA2121\">','</span>)\n    new_num <span style=\"color: #666666\">=</span> <span style=\"color: #008000\">str</span>(<span style=\"color: #008000\">int</span>(tokens[<span style=\"color: #666666\">1</span>]) <span style=\"color: #666666\">+</span> <span style=\"color: #666666\">1</span>)\n    new_tokens <span style=\"color: #666666\">=</span> [tokens[<span style=\"color: #666666\">0</span>], new_num, tokens[<span style=\"color: #666666\">2</span>]]\n    <span style=\"color: #008000; font-weight: bold\">return</span> <span style=\"color: #BA2121\">','</span><span style=\"color: #666666\">.</span>join(new_tokens)\n\n\n<span style=\"color: #008000; font-weight: bold\">def</span> <span style=\"color: #0000FF\">main</span>(input_file, output_file):\n    <span style=\"color: #008000; font-weight: bold\">with</span> <span style=\"color: #008000\">open</span>(input_file) <span style=\"color: #008000; font-weight: bold\">as</span> file:\n        lines <span style=\"color: #666666\">=</span> file<span style=\"color: #666666\">.</span>readlines()\n\n    new_lines <span style=\"color: #666666\">=</span> []\n    <span style=\"color: #008000; font-weight: bold\">for</span> line <span style=\"color: #AA22FF; font-weight: bold\">in</span> lines:\n        new_lines<span style=\"color: #666666\">.</span>append(add_one(line))\n\n    <span style=\"color: #008000; font-weight: bold\">with</span> <span style=\"color: #008000\">open</span>(output_file, <span style=\"color: #BA2121\">'w'</span>) <span style=\"color: #008000; font-weight: bold\">as</span> file:\n        file<span style=\"color: #666666\">.</span>writelines(new_lines)\n\n\n<span style=\"color: #008000; font-weight: bold\">if</span> <span style=\"color: #19177C\">__name__</span> <span style=\"color: #666666\">==</span> <span style=\"color: #BA2121\">'__main__'</span>:\n    main(sys<span style=\"color: #666666\">.</span>argv[<span style=\"color: #666666\">1</span>], sys<span style=\"color: #666666\">.</span>argv[<span style=\"color: #666666\">2</span>])\n</code></pre></div>",
                "question_type": "true_false_question",
                "points_possible": 1,
                "answers": [
                    {
                        "answer_text": "True",
                        "answer_weight": 100
                    },
                    {
                        "answer_text": "False",
                        "answer_weight": 0
                    }
                ]
            },
            {
                "question_text": "<div class=\"codehilite\" style=\"background: #f8f8f8\"><pre style=\"line-height: 125%;\"><span></span><code><span style=\"color: #008000; font-weight: bold\">import</span> <span style=\"color: #0000FF; font-weight: bold\">sys</span>\n\n\n<span style=\"color: #008000; font-weight: bold\">def</span> <span style=\"color: #0000FF\">add_one</span>(line):\n    tokens <span style=\"color: #666666\">=</span> line<span style=\"color: #666666\">.</span>split(<span style=\"color: #BA2121\">','</span>)\n    new_num <span style=\"color: #666666\">=</span> tokens[<span style=\"color: #666666\">1</span>] <span style=\"color: #666666\">+</span> <span style=\"color: #666666\">1</span>\n    new_tokens <span style=\"color: #666666\">=</span> [tokens[<span style=\"color: #666666\">0</span>], new_num, tokens[<span style=\"color: #666666\">2</span>]]\n    <span style=\"color: #008000; font-weight: bold\">return</span> <span style=\"color: #BA2121\">','</span><span style=\"color: #666666\">.</span>join(new_tokens)\n\n\n<span style=\"color: #008000; font-weight: bold\">def</span> <span style=\"color: #0000FF\">main</span>(input_file, output_file):\n    <span style=\"color: #008000; font-weight: bold\">with</span> <span style=\"color: #008000\">open</span>(input_file) <span style=\"color: #008000; font-weight: bold\">as</span> file:\n        lines <span style=\"color: #666666\">=</span> file<span style=\"color: #666666\">.</span>readlines()\n\n    new_lines <span style=\"color: #666666\">=</span> []\n    <span style=\"color: #008000; font-weight: bold\">for</span> line <span style=\"color: #AA22FF; font-weight: bold\">in</span> lines:\n        new_lines<span style=\"color: #666666\">.</span>append(add_one(line))\n\n    <span style=\"color: #008000; font-weight: bold\">with</span> <span style=\"color: #008000\">open</span>(output_file, <span style=\"color: #BA2121\">'w'</span>) <span style=\"color: #008000; font-weight: bold\">as</span> file:\n        file<span style=\"color: #666666\">.</span>writelines(new_lines)\n\n\n<span style=\"color: #008000; font-weight: bold\">if</span> <span style=\"color: #19177C\">__name__</span> <span style=\"color: #666666\">==</span> <span style=\"color: #BA2121\">'__main__'</span>:\n    main(sys<span style=\"color: #666666\">.</span>argv[<span style=\"color: #666666\">1</span>], sys<span style=\"color: #666666\">.</span>argv[<span style=\"color: #666666\">2</span>])\n</code></pre></div>",
                "question_type": "true_false_question",
                "points_possible": 1,
                "answers": [
                    {
                        "answer_text": "True",
                        "answer_weight": 100
                    },
                    {
                        "answer_text": "False",
                        "answer_weight": 0
                    }
                ]
            },
            {
                "question_text": "<h1>Midway Question</h1>\n<p>What does the following expression evaluate to?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8\"><pre style=\"line-height: 125%;\"><span></span><code><span style=\"color: #AA22FF; font-weight: bold\">not</span> <span style=\"color: #008000; font-weight: bold\">False</span>\n</code></pre></div>",
                "question_type": "true_false_question",
                "points_possible": 1,
                "answers": [
                    {
                        "answer_text": "True",
                        "answer_weight": 0
                    },
                    {
                        "answer_text": "False",
                        "answer_weight": 100
                    }
                ]
            },
            {
                "question_text": "<h1>Questions 19-23</h1>\n<p>Which code blocks correctly compare two strings, character by character, and print only the characters that match?</p>\n<p>Examples:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8\"><pre style=\"line-height: 125%;\"><span></span><code>python matches.py hourse house\nhou\n</code></pre></div>\n<div class=\"codehilite\" style=\"background: #f8f8f8\"><pre style=\"line-height: 125%;\"><span></span><code>python matches.py bolus torus\nous\n</code></pre></div>\n<div class=\"codehilite\" style=\"background: #f8f8f8\"><pre style=\"line-height: 125%;\"><span></span><code>python matches.py banana fruitcake\n</code></pre></div>\n<p>Select all that apply.</p>",
                "question_type": "text_only_question"
            },
            {
                "question_text": "<div class=\"codehilite\" style=\"background: #f8f8f8\"><pre style=\"line-height: 125%;\"><span></span><code><span style=\"color: #008000; font-weight: bold\">import</span> <span style=\"color: #0000FF; font-weight: bold\">sys</span>\n\n\n<span style=\"color: #008000; font-weight: bold\">def</span> <span style=\"color: #0000FF\">main</span>(word1, word2):\n    matches <span style=\"color: #666666\">=</span> <span style=\"color: #BA2121\">''</span>\n    <span style=\"color: #008000; font-weight: bold\">for</span> letter <span style=\"color: #AA22FF; font-weight: bold\">in</span> word1:\n        <span style=\"color: #008000; font-weight: bold\">if</span> letter <span style=\"color: #AA22FF; font-weight: bold\">in</span> word2:\n            matches <span style=\"color: #666666\">+=</span> letter\n    <span style=\"color: #008000\">print</span>(matches)\n\n\n<span style=\"color: #008000; font-weight: bold\">if</span> <span style=\"color: #19177C\">__name__</span> <span style=\"color: #666666\">==</span> <span style=\"color: #BA2121\">'__main__'</span>:\n    main(sys<span style=\"color: #666666\">.</span>argv[<span style=\"color: #666666\">1</span>], sys<span style=\"color: #666666\">.</span>argv[<span style=\"color: #666666\">2</span>])\n</code></pre></div>",
                "question_type": "true_false_question",
                "points_possible": 1,
                "answers": [
                    {
                        "answer_text": "True",
                        "answer_weight": 100
                    },
                    {
                        "answer_text": "False",
                        "answer_weight": 0
                    }
                ]
            },
            {
                "question_text": "<div class=\"codehilite\" style=\"background: #f8f8f8\"><pre style=\"line-height: 125%;\"><span></span><code><span style=\"color: #008000; font-weight: bold\">import</span> <span style=\"color: #0000FF; font-weight: bold\">sys</span>\n\n\n<span style=\"color: #008000; font-weight: bold\">def</span> <span style=\"color: #0000FF\">main</span>(word1, word2):\n    matches <span style=\"color: #666666\">=</span> <span style=\"color: #BA2121\">''</span>\n    <span style=\"color: #008000; font-weight: bold\">for</span> w1, w2 <span style=\"color: #AA22FF; font-weight: bold\">in</span> <span style=\"color: #008000\">zip</span>(word1, word2):\n        <span style=\"color: #008000; font-weight: bold\">if</span> w1 <span style=\"color: #666666\">==</span> w2:\n            matches <span style=\"color: #666666\">+=</span> w1\n    <span style=\"color: #008000\">print</span>(matches)\n\n\n<span style=\"color: #008000; font-weight: bold\">if</span> <span style=\"color: #19177C\">__name__</span> <span style=\"color: #666666\">==</span> <span style=\"color: #BA2121\">'__main__'</span>:\n    main(sys<span style=\"color: #666666\">.</span>argv[<span style=\"color: #666666\">1</span>], sys<span style=\"color: #666666\">.</span>argv[<span style=\"color: #666666\">2</span>])\n</code></pre></div>",
                "question_type": "true_false_question",
                "points_possible": 1,
                "answers": [
                    {
                        "answer_text": "True",
                        "answer_weight": 100
                    },
                    {
                        "answer_text": "False",
                        "answer_weight": 0
                    }
                ]
            },
            {
                "question_text": "<div class=\"codehilite\" style=\"background: #f8f8f8\"><pre style=\"line-height: 125%;\"><span></span><code><span style=\"color: #008000; font-weight: bold\">import</span> <span style=\"color: #0000FF; font-weight: bold\">sys</span>\n\n\n<span style=\"color: #008000; font-weight: bold\">def</span> <span style=\"color: #0000FF\">main</span>(word1, word2):\n    matches <span style=\"color: #666666\">=</span> <span style=\"color: #BA2121\">''</span>\n    <span style=\"color: #008000; font-weight: bold\">if</span> word1 <span style=\"color: #AA22FF; font-weight: bold\">in</span> word2:\n        <span style=\"color: #008000; font-weight: bold\">for</span> letter <span style=\"color: #AA22FF; font-weight: bold\">in</span> word1:\n            matches <span style=\"color: #666666\">+=</span> letter\n    <span style=\"color: #008000\">print</span>(matches)\n\n\n<span style=\"color: #008000; font-weight: bold\">if</span> <span style=\"color: #19177C\">__name__</span> <span style=\"color: #666666\">==</span> <span style=\"color: #BA2121\">'__main__'</span>:\n    main(sys<span style=\"color: #666666\">.</span>argv[<span style=\"color: #666666\">1</span>], sys<span style=\"color: #666666\">.</span>argv[<span style=\"color: #666666\">2</span>])\n</code></pre></div>",
                "question_type": "true_false_question",
                "points_possible": 1,
                "answers": [
                    {
                        "answer_text": "True",
                        "answer_weight": 100
                    },
                    {
                        "answer_text": "False",
                        "answer_weight": 0
                    }
                ]
            },
            {
                "question_text": "<div class=\"codehilite\" style=\"background: #f8f8f8\"><pre style=\"line-height: 125%;\"><span></span><code><span style=\"color: #008000; font-weight: bold\">import</span> <span style=\"color: #0000FF; font-weight: bold\">sys</span>\n\n\n<span style=\"color: #008000; font-weight: bold\">def</span> <span style=\"color: #0000FF\">main</span>(word1, word2):\n    matches <span style=\"color: #666666\">=</span> <span style=\"color: #BA2121\">''</span>\n    <span style=\"color: #008000; font-weight: bold\">for</span> i <span style=\"color: #AA22FF; font-weight: bold\">in</span> <span style=\"color: #008000\">range</span>(<span style=\"color: #008000\">len</span>(word1)):\n        <span style=\"color: #008000; font-weight: bold\">if</span> i <span style=\"color: #666666\">&lt;</span> <span style=\"color: #008000\">len</span>(word2) <span style=\"color: #AA22FF; font-weight: bold\">and</span> word1[i] <span style=\"color: #666666\">==</span> word2[i]:\n            matches <span style=\"color: #666666\">+=</span> word1[i]\n    <span style=\"color: #008000\">print</span>(matches)\n\n\n<span style=\"color: #008000; font-weight: bold\">if</span> <span style=\"color: #19177C\">__name__</span> <span style=\"color: #666666\">==</span> <span style=\"color: #BA2121\">'__main__'</span>:\n    main(sys<span style=\"color: #666666\">.</span>argv[<span style=\"color: #666666\">1</span>], sys<span style=\"color: #666666\">.</span>argv[<span style=\"color: #666666\">2</span>])\n</code></pre></div>",
                "question_type": "true_false_question",
                "points_possible": 1,
                "answers": [
                    {
                        "answer_text": "True",
                        "answer_weight": 100
                    },
                    {
                        "answer_text": "False",
                        "answer_weight": 0
                    }
                ]
            },
            {
                "question_text": "<div class=\"codehilite\" style=\"background: #f8f8f8\"><pre style=\"line-height: 125%;\"><span></span><code><span style=\"color: #008000; font-weight: bold\">import</span> <span style=\"color: #0000FF; font-weight: bold\">sys</span>\n\n\n<span style=\"color: #008000; font-weight: bold\">def</span> <span style=\"color: #0000FF\">main</span>(word1, word2):\n    <span style=\"color: #008000; font-weight: bold\">for</span> c1, c2 <span style=\"color: #AA22FF; font-weight: bold\">in</span> <span style=\"color: #008000\">zip</span>(word1, word2):\n        <span style=\"color: #008000; font-weight: bold\">if</span> c1 <span style=\"color: #666666\">==</span> c2:\n            <span style=\"color: #008000\">print</span>(c1)\n\n\n<span style=\"color: #008000; font-weight: bold\">if</span> <span style=\"color: #19177C\">__name__</span> <span style=\"color: #666666\">==</span> <span style=\"color: #BA2121\">'__main__'</span>:\n    main(sys<span style=\"color: #666666\">.</span>argv[<span style=\"color: #666666\">1</span>], sys<span style=\"color: #666666\">.</span>argv[<span style=\"color: #666666\">2</span>])\n</code></pre></div>",
                "question_type": "true_false_question",
                "points_possible": 1,
                "answers": [
                    {
                        "answer_text": "True",
                        "answer_weight": 100
                    },
                    {
                        "answer_text": "False",
                        "answer_weight": 0
                    }
                ]
            },
            {
                "question_text": "<h1>Questions 24-30</h1>\n<p>Consider the following program:</p>\n<p><strong><code style=\"color: #000000\">subs.py</code></strong></p>\n<div class=\"codehilite\" style=\"background: #f8f8f8\"><pre style=\"line-height: 125%;\"><span></span><code><span style=\"color: #008000; font-weight: bold\">import</span> <span style=\"color: #0000FF; font-weight: bold\">sys</span>\n\n\n<span style=\"color: #008000; font-weight: bold\">def</span> <span style=\"color: #0000FF\">substitute</span>(text, substitutions): <span style=\"color: #666666\">...</span>\n\n\n<span style=\"color: #008000; font-weight: bold\">def</span> <span style=\"color: #0000FF\">main</span>(text, substitutions):\n    text <span style=\"color: #666666\">=</span> substitute(text, substitutions)\n    <span style=\"color: #008000\">print</span>(text)\n\n\n<span style=\"color: #008000; font-weight: bold\">if</span> <span style=\"color: #19177C\">__name__</span> <span style=\"color: #666666\">==</span> <span style=\"color: #BA2121\">'__main__'</span>:\n\n    options <span style=\"color: #666666\">=</span> {\n        <span style=\"color: #BA2121\">\"bird\"</span>: <span style=\"color: #BA2121\">\"feathered critter\"</span>,\n        <span style=\"color: #BA2121\">\"fish\"</span>: <span style=\"color: #BA2121\">\"wet critter\"</span>,\n        <span style=\"color: #BA2121\">\"dog\"</span>: <span style=\"color: #BA2121\">\"happy critter\"</span>,\n        <span style=\"color: #BA2121\">\"cat\"</span>: <span style=\"color: #BA2121\">\"furry critter\"</span>\n    }\n    main(sys<span style=\"color: #666666\">.</span>argv[<span style=\"color: #666666\">1</span>], options)\n</code></pre></div>\n<p>Which of the following implementations of <code style=\"color: #000000\">substitute</code> can produce this execution:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8\"><pre style=\"line-height: 125%;\"><span></span><code>python subs.py \"My dog likes to watch the fish swim. My cat wants to catch the bird in the tree.\"\nMy happy critter likes to watch the wet critter swim. My furry critter wants to catch the feathered critter in the tree.\n</code></pre></div>",
                "question_type": "text_only_question"
            },
            {
                "question_text": "<div class=\"codehilite\" style=\"background: #f8f8f8\"><pre style=\"line-height: 125%;\"><span></span><code><span style=\"color: #008000; font-weight: bold\">def</span> <span style=\"color: #0000FF\">substitute</span>(text, substitutions):\n    <span style=\"color: #008000; font-weight: bold\">for</span> key, value <span style=\"color: #AA22FF; font-weight: bold\">in</span> substitutions<span style=\"color: #666666\">.</span>items():\n        text <span style=\"color: #666666\">=</span> text<span style=\"color: #666666\">.</span>replace(key, value)\n    <span style=\"color: #008000; font-weight: bold\">return</span> text\n</code></pre></div>",
                "question_type": "true_false_question",
                "points_possible": 1,
                "answers": [
                    {
                        "answer_text": "True",
                        "answer_weight": 100
                    },
                    {
                        "answer_text": "False",
                        "answer_weight": 0
                    }
                ]
            },
            {
                "question_text": "<div class=\"codehilite\" style=\"background: #f8f8f8\"><pre style=\"line-height: 125%;\"><span></span><code><span style=\"color: #008000; font-weight: bold\">def</span> <span style=\"color: #0000FF\">substitute</span>(text, substitutions):\n    new_words <span style=\"color: #666666\">=</span> []\n    <span style=\"color: #008000; font-weight: bold\">for</span> word <span style=\"color: #AA22FF; font-weight: bold\">in</span> text<span style=\"color: #666666\">.</span>split():\n        <span style=\"color: #008000; font-weight: bold\">if</span> word <span style=\"color: #AA22FF; font-weight: bold\">in</span> substitutions:\n            new_words<span style=\"color: #666666\">.</span>append(substitutions[word])\n        <span style=\"color: #008000; font-weight: bold\">else</span>:\n            new_words<span style=\"color: #666666\">.</span>append(word)\n    <span style=\"color: #008000; font-weight: bold\">return</span> <span style=\"color: #BA2121\">' '</span><span style=\"color: #666666\">.</span>join(new_words)\n</code></pre></div>",
                "question_type": "true_false_question",
                "points_possible": 1,
                "answers": [
                    {
                        "answer_text": "True",
                        "answer_weight": 100
                    },
                    {
                        "answer_text": "False",
                        "answer_weight": 0
                    }
                ]
            },
            {
                "question_text": "<div class=\"codehilite\" style=\"background: #f8f8f8\"><pre style=\"line-height: 125%;\"><span></span><code><span style=\"color: #008000; font-weight: bold\">def</span> <span style=\"color: #0000FF\">substitute</span>(text, substitutions):\n    new_text <span style=\"color: #666666\">=</span> <span style=\"color: #BA2121\">''</span>\n    <span style=\"color: #008000; font-weight: bold\">for</span> word <span style=\"color: #AA22FF; font-weight: bold\">in</span> text:\n        <span style=\"color: #008000; font-weight: bold\">if</span> word <span style=\"color: #AA22FF; font-weight: bold\">in</span> substitutions:\n            new_text <span style=\"color: #666666\">+=</span> substitutions[word]\n        <span style=\"color: #008000; font-weight: bold\">else</span>:\n            new_text <span style=\"color: #666666\">+=</span> word\n    <span style=\"color: #008000; font-weight: bold\">return</span> new_text\n</code></pre></div>",
                "question_type": "true_false_question",
                "points_possible": 1,
                "answers": [
                    {
                        "answer_text": "True",
                        "answer_weight": 100
                    },
                    {
                        "answer_text": "False",
                        "answer_weight": 0
                    }
                ]
            },
            {
                "question_text": "<div class=\"codehilite\" style=\"background: #f8f8f8\"><pre style=\"line-height: 125%;\"><span></span><code><span style=\"color: #008000; font-weight: bold\">def</span> <span style=\"color: #0000FF\">substitute</span>(text, substitutions):\n    new_text <span style=\"color: #666666\">=</span> <span style=\"color: #BA2121\">''</span>\n    <span style=\"color: #008000; font-weight: bold\">for</span> word <span style=\"color: #AA22FF; font-weight: bold\">in</span> text<span style=\"color: #666666\">.</span>split():\n        <span style=\"color: #008000; font-weight: bold\">if</span> word <span style=\"color: #AA22FF; font-weight: bold\">in</span> substitutions:\n            new_text <span style=\"color: #666666\">+=</span> substitutions[word]\n        <span style=\"color: #008000; font-weight: bold\">else</span>:\n            new_text <span style=\"color: #666666\">+=</span> word\n    <span style=\"color: #008000; font-weight: bold\">return</span> new_text\n</code></pre></div>",
                "question_type": "true_false_question",
                "points_possible": 1,
                "answers": [
                    {
                        "answer_text": "True",
                        "answer_weight": 100
                    },
                    {
                        "answer_text": "False",
                        "answer_weight": 0
                    }
                ]
            },
            {
                "question_text": "<div class=\"codehilite\" style=\"background: #f8f8f8\"><pre style=\"line-height: 125%;\"><span></span><code><span style=\"color: #008000; font-weight: bold\">def</span> <span style=\"color: #0000FF\">substitute</span>(text, substitutions):\n    new_words <span style=\"color: #666666\">=</span> []\n    <span style=\"color: #008000; font-weight: bold\">for</span> word <span style=\"color: #AA22FF; font-weight: bold\">in</span> text<span style=\"color: #666666\">.</span>split():\n        <span style=\"color: #008000; font-weight: bold\">for</span> key, value <span style=\"color: #AA22FF; font-weight: bold\">in</span> substitutions<span style=\"color: #666666\">.</span>items():\n            <span style=\"color: #008000; font-weight: bold\">if</span> key <span style=\"color: #AA22FF; font-weight: bold\">in</span> word:\n                word <span style=\"color: #666666\">=</span> word<span style=\"color: #666666\">.</span>replace(key, value)\n        new_words<span style=\"color: #666666\">.</span>append(word)\n    <span style=\"color: #008000; font-weight: bold\">return</span> <span style=\"color: #BA2121\">' '</span><span style=\"color: #666666\">.</span>join(new_words\n</code></pre></div>",
                "question_type": "true_false_question",
                "points_possible": 1,
                "answers": [
                    {
                        "answer_text": "True",
                        "answer_weight": 100
                    },
                    {
                        "answer_text": "False",
                        "answer_weight": 0
                    }
                ]
            },
            {
                "question_text": "<div class=\"codehilite\" style=\"background: #f8f8f8\"><pre style=\"line-height: 125%;\"><span></span><code><span style=\"color: #008000; font-weight: bold\">def</span> <span style=\"color: #0000FF\">substitute</span>(text, substitutions):\n    new_words <span style=\"color: #666666\">=</span> []\n    <span style=\"color: #008000; font-weight: bold\">for</span> word <span style=\"color: #AA22FF; font-weight: bold\">in</span> text<span style=\"color: #666666\">.</span>split():\n        <span style=\"color: #008000; font-weight: bold\">if</span> word <span style=\"color: #AA22FF; font-weight: bold\">in</span> substitutions:\n            word <span style=\"color: #666666\">=</span> substitutions[word]\n        new_words<span style=\"color: #666666\">.</span>append(word)\n    <span style=\"color: #008000; font-weight: bold\">return</span> <span style=\"color: #BA2121\">' '</span><span style=\"color: #666666\">.</span>join(new_words)\n</code></pre></div>",
                "question_type": "true_false_question",
                "points_possible": 1,
                "answers": [
                    {
                        "answer_text": "True",
                        "answer_weight": 100
                    },
                    {
                        "answer_text": "False",
                        "answer_weight": 0
                    }
                ]
            },
            {
                "question_text": "<div class=\"codehilite\" style=\"background: #f8f8f8\"><pre style=\"line-height: 125%;\"><span></span><code><span style=\"color: #008000; font-weight: bold\">def</span> <span style=\"color: #0000FF\">substitute</span>(text, substitutions):\n    <span style=\"color: #008000; font-weight: bold\">for</span> key, value <span style=\"color: #AA22FF; font-weight: bold\">in</span> substitutions:\n        text<span style=\"color: #666666\">.</span>replace(key, value)\n    <span style=\"color: #008000; font-weight: bold\">return</span> text\n</code></pre></div>",
                "question_type": "true_false_question",
                "points_possible": 1,
                "answers": [
                    {
                        "answer_text": "True",
                        "answer_weight": 100
                    },
                    {
                        "answer_text": "False",
                        "answer_weight": 0
                    }
                ]
            },
            {
                "question_text": "<h1>Questions 31-35</h1>\n<p>Given the program:</p>\n<p><strong><code style=\"color: #000000\">counts.py</code></strong></p>\n<div class=\"codehilite\" style=\"background: #f8f8f8\"><pre style=\"line-height: 125%;\"><span></span><code><span style=\"color: #008000; font-weight: bold\">import</span> <span style=\"color: #0000FF; font-weight: bold\">sys</span>\n\n\n<span style=\"color: #008000; font-weight: bold\">def</span> <span style=\"color: #0000FF\">count_letters</span>(text): <span style=\"color: #666666\">...</span>\n\n\n<span style=\"color: #008000; font-weight: bold\">def</span> <span style=\"color: #0000FF\">main</span>(text):\n    counts <span style=\"color: #666666\">=</span> count_letters(text)\n    <span style=\"color: #008000\">print</span>(counts)\n\n\n<span style=\"color: #008000; font-weight: bold\">if</span> <span style=\"color: #19177C\">__name__</span> <span style=\"color: #666666\">==</span> <span style=\"color: #BA2121\">'__main__'</span>:\n    main(sys<span style=\"color: #666666\">.</span>argv[<span style=\"color: #666666\">1</span>])\n</code></pre></div>\n<p>Which of the following implementations of <code style=\"color: #000000\">count_letters</code> will produce the following output:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8\"><pre style=\"line-height: 125%;\"><span></span><code>python counts.py 'Apples, bananas, pears!'\n{'a': 5, 'p': 3, 'l': 1, 'e': 2, 's': 3, 'b': 1, 'n': 2, 'r': 1}\n</code></pre></div>",
                "question_type": "text_only_question"
            },
            {
                "question_text": "<div class=\"codehilite\" style=\"background: #f8f8f8\"><pre style=\"line-height: 125%;\"><span></span><code><span style=\"color: #008000; font-weight: bold\">def</span> <span style=\"color: #0000FF\">count_letters</span>(text):\n    counts <span style=\"color: #666666\">=</span> {}\n    <span style=\"color: #008000; font-weight: bold\">for</span> letter <span style=\"color: #AA22FF; font-weight: bold\">in</span> <span style=\"color: #BA2121\">'abcdefghijklmnopqrstuvwxyz'</span>:\n        counts[letter] <span style=\"color: #666666\">=</span> <span style=\"color: #666666\">0</span>\n\n    <span style=\"color: #008000; font-weight: bold\">for</span> letter <span style=\"color: #AA22FF; font-weight: bold\">in</span> text<span style=\"color: #666666\">.</span>lower():\n        <span style=\"color: #008000; font-weight: bold\">if</span> letter<span style=\"color: #666666\">.</span>isalnum():\n            counts[letter] <span style=\"color: #666666\">+=</span> <span style=\"color: #666666\">1</span>\n\n    <span style=\"color: #008000; font-weight: bold\">return</span> counts\n</code></pre></div>",
                "question_type": "true_false_question",
                "points_possible": 1,
                "answers": [
                    {
                        "answer_text": "True",
                        "answer_weight": 100
                    },
                    {
                        "answer_text": "False",
                        "answer_weight": 0
                    }
                ]
            },
            {
                "question_text": "<div class=\"codehilite\" style=\"background: #f8f8f8\"><pre style=\"line-height: 125%;\"><span></span><code><span style=\"color: #008000; font-weight: bold\">def</span> <span style=\"color: #0000FF\">count_letters</span>(text):\n    counts <span style=\"color: #666666\">=</span> {}\n    <span style=\"color: #008000; font-weight: bold\">for</span> letter <span style=\"color: #AA22FF; font-weight: bold\">in</span> text:\n        <span style=\"color: #008000; font-weight: bold\">if</span> letter <span style=\"color: #AA22FF; font-weight: bold\">not</span> <span style=\"color: #AA22FF; font-weight: bold\">in</span> counts:\n            counts[letter] <span style=\"color: #666666\">=</span> <span style=\"color: #666666\">0</span>\n        counts[letter] <span style=\"color: #666666\">+=</span> <span style=\"color: #666666\">1</span>    \n    <span style=\"color: #008000; font-weight: bold\">return</span> counts\n</code></pre></div>",
                "question_type": "true_false_question",
                "points_possible": 1,
                "answers": [
                    {
                        "answer_text": "True",
                        "answer_weight": 100
                    },
                    {
                        "answer_text": "False",
                        "answer_weight": 0
                    }
                ]
            },
            {
                "question_text": "<div class=\"codehilite\" style=\"background: #f8f8f8\"><pre style=\"line-height: 125%;\"><span></span><code><span style=\"color: #008000; font-weight: bold\">def</span> <span style=\"color: #0000FF\">count_letters</span>(text):\n    counts <span style=\"color: #666666\">=</span> {}\n    <span style=\"color: #008000; font-weight: bold\">for</span> letter <span style=\"color: #AA22FF; font-weight: bold\">in</span> text:\n        <span style=\"color: #008000; font-weight: bold\">if</span> letter<span style=\"color: #666666\">.</span>lower() <span style=\"color: #AA22FF; font-weight: bold\">not</span> <span style=\"color: #AA22FF; font-weight: bold\">in</span> counts:\n            counts[letter] <span style=\"color: #666666\">=</span> <span style=\"color: #666666\">0</span>\n        counts[letter] <span style=\"color: #666666\">+=</span> <span style=\"color: #666666\">1</span>    \n    <span style=\"color: #008000; font-weight: bold\">return</span> counts\n</code></pre></div>",
                "question_type": "true_false_question",
                "points_possible": 1,
                "answers": [
                    {
                        "answer_text": "True",
                        "answer_weight": 100
                    },
                    {
                        "answer_text": "False",
                        "answer_weight": 0
                    }
                ]
            },
            {
                "question_text": "<div class=\"codehilite\" style=\"background: #f8f8f8\"><pre style=\"line-height: 125%;\"><span></span><code><span style=\"color: #008000; font-weight: bold\">def</span> <span style=\"color: #0000FF\">count_letters</span>(text):\n    counts <span style=\"color: #666666\">=</span> {}\n    <span style=\"color: #008000; font-weight: bold\">for</span> letter <span style=\"color: #AA22FF; font-weight: bold\">in</span> text<span style=\"color: #666666\">.</span>lower():\n        <span style=\"color: #008000; font-weight: bold\">if</span> <span style=\"color: #AA22FF; font-weight: bold\">not</span> letter<span style=\"color: #666666\">.</span>isalnum():\n            <span style=\"color: #008000; font-weight: bold\">break</span>\n        <span style=\"color: #008000; font-weight: bold\">elif</span> letter <span style=\"color: #AA22FF; font-weight: bold\">not</span> <span style=\"color: #AA22FF; font-weight: bold\">in</span> counts:\n            counts[letter] <span style=\"color: #666666\">=</span> <span style=\"color: #666666\">0</span>\n        counts[letter] <span style=\"color: #666666\">+=</span> <span style=\"color: #666666\">1</span>\n    <span style=\"color: #008000; font-weight: bold\">return</span> counts\n</code></pre></div>",
                "question_type": "true_false_question",
                "points_possible": 1,
                "answers": [
                    {
                        "answer_text": "True",
                        "answer_weight": 100
                    },
                    {
                        "answer_text": "False",
                        "answer_weight": 0
                    }
                ]
            },
            {
                "question_text": "<div class=\"codehilite\" style=\"background: #f8f8f8\"><pre style=\"line-height: 125%;\"><span></span><code><span style=\"color: #008000; font-weight: bold\">def</span> <span style=\"color: #0000FF\">count_letters</span>(text):\n    counts <span style=\"color: #666666\">=</span> {}\n    <span style=\"color: #008000; font-weight: bold\">for</span> letter <span style=\"color: #AA22FF; font-weight: bold\">in</span> text<span style=\"color: #666666\">.</span>lower():\n        <span style=\"color: #008000; font-weight: bold\">if</span> letter<span style=\"color: #666666\">.</span>isalnum():\n            <span style=\"color: #008000; font-weight: bold\">if</span> letter <span style=\"color: #AA22FF; font-weight: bold\">not</span> <span style=\"color: #AA22FF; font-weight: bold\">in</span> counts:\n                counts[letter] <span style=\"color: #666666\">=</span> <span style=\"color: #666666\">0</span>\n            counts[letter] <span style=\"color: #666666\">+=</span> <span style=\"color: #666666\">1</span>\n    <span style=\"color: #008000; font-weight: bold\">return</span> counts\n</code></pre></div>",
                "question_type": "true_false_question",
                "points_possible": 1,
                "answers": [
                    {
                        "answer_text": "True",
                        "answer_weight": 100
                    },
                    {
                        "answer_text": "False",
                        "answer_weight": 0
                    }
                ]
            },
            {
                "question_text": "<h1>Questions 36-39</h1>\n<p>Given the following program:</p>\n<p><strong><code style=\"color: #000000\">group_words.py</code></strong></p>\n<div class=\"codehilite\" style=\"background: #f8f8f8\"><pre style=\"line-height: 125%;\"><span></span><code><span style=\"color: #008000; font-weight: bold\">import</span> <span style=\"color: #0000FF; font-weight: bold\">sys</span>\n\n\n<span style=\"color: #008000; font-weight: bold\">def</span> <span style=\"color: #0000FF\">make_groups</span>(text): <span style=\"color: #666666\">...</span>\n\n\n<span style=\"color: #008000; font-weight: bold\">def</span> <span style=\"color: #0000FF\">main</span>(text):\n    groups <span style=\"color: #666666\">=</span> make_groups(text)\n    <span style=\"color: #008000\">print</span>(groups)\n\n\n<span style=\"color: #008000; font-weight: bold\">if</span> <span style=\"color: #19177C\">__name__</span> <span style=\"color: #666666\">==</span> <span style=\"color: #BA2121\">'__main__'</span>:\n    main(sys<span style=\"color: #666666\">.</span>argv[<span style=\"color: #666666\">1</span>])\n</code></pre></div>\n<p>Which implementations of <code style=\"color: #000000\">make_groups</code> can produce the following output?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8\"><pre style=\"line-height: 125%;\"><span></span><code>python group_words.py 'I, Nephi, having been born of goodly parents...'\n{1: ['i'],\n 5: ['nephi'],\n 6: ['having', 'goodly'],\n 4: ['been', 'born'],\n 2: ['of'],\n 7: ['parents']}\n</code></pre></div>",
                "question_type": "text_only_question"
            },
            {
                "question_text": "<div class=\"codehilite\" style=\"background: #f8f8f8\"><pre style=\"line-height: 125%;\"><span></span><code><span style=\"color: #008000; font-weight: bold\">def</span> <span style=\"color: #0000FF\">make_groups</span>(text):\n    groups <span style=\"color: #666666\">=</span> {}\n    <span style=\"color: #008000; font-weight: bold\">for</span> word <span style=\"color: #AA22FF; font-weight: bold\">in</span> text<span style=\"color: #666666\">.</span>lower()<span style=\"color: #666666\">.</span>split():\n        word <span style=\"color: #666666\">=</span> word<span style=\"color: #666666\">.</span>strip(<span style=\"color: #BA2121\">'.,!?'</span>)\n        key <span style=\"color: #666666\">=</span> <span style=\"color: #008000\">len</span>(word)\n        <span style=\"color: #008000; font-weight: bold\">if</span> key <span style=\"color: #AA22FF; font-weight: bold\">not</span> <span style=\"color: #AA22FF; font-weight: bold\">in</span> groups:\n            groups[key] <span style=\"color: #666666\">=</span> []\n        groups[key]<span style=\"color: #666666\">.</span>append(word)\n    <span style=\"color: #008000; font-weight: bold\">return</span> groups\n</code></pre></div>",
                "question_type": "true_false_question",
                "points_possible": 1,
                "answers": [
                    {
                        "answer_text": "True",
                        "answer_weight": 100
                    },
                    {
                        "answer_text": "False",
                        "answer_weight": 0
                    }
                ]
            },
            {
                "question_text": "<div class=\"codehilite\" style=\"background: #f8f8f8\"><pre style=\"line-height: 125%;\"><span></span><code><span style=\"color: #008000; font-weight: bold\">def</span> <span style=\"color: #0000FF\">make_groups</span>(text):\n    groups <span style=\"color: #666666\">=</span> {}\n    <span style=\"color: #008000; font-weight: bold\">for</span> word <span style=\"color: #AA22FF; font-weight: bold\">in</span> text<span style=\"color: #666666\">.</span>split():\n        word <span style=\"color: #666666\">=</span> word<span style=\"color: #666666\">.</span>strip(<span style=\"color: #BA2121\">'.,!?'</span>)<span style=\"color: #666666\">.</span>lower()\n        key <span style=\"color: #666666\">=</span> <span style=\"color: #008000\">len</span>(word)\n        <span style=\"color: #008000; font-weight: bold\">if</span> key <span style=\"color: #AA22FF; font-weight: bold\">not</span> <span style=\"color: #AA22FF; font-weight: bold\">in</span> groups:\n            groups[key] <span style=\"color: #666666\">=</span> [word]\n        <span style=\"color: #008000; font-weight: bold\">else</span>:\n            groups[key]<span style=\"color: #666666\">.</span>append(word)\n    <span style=\"color: #008000; font-weight: bold\">return</span> groups\n</code></pre></div>",
                "question_type": "true_false_question",
                "points_possible": 1,
                "answers": [
                    {
                        "answer_text": "True",
                        "answer_weight": 100
                    },
                    {
                        "answer_text": "False",
                        "answer_weight": 0
                    }
                ]
            },
            {
                "question_text": "<div class=\"codehilite\" style=\"background: #f8f8f8\"><pre style=\"line-height: 125%;\"><span></span><code><span style=\"color: #008000; font-weight: bold\">def</span> <span style=\"color: #0000FF\">make_groups</span>(text):\n    groups <span style=\"color: #666666\">=</span> {}\n    <span style=\"color: #008000; font-weight: bold\">for</span> word <span style=\"color: #AA22FF; font-weight: bold\">in</span> text:\n        word <span style=\"color: #666666\">=</span> word<span style=\"color: #666666\">.</span>strip(<span style=\"color: #BA2121\">'.,!?'</span>)<span style=\"color: #666666\">.</span>lower()\n        <span style=\"color: #008000; font-weight: bold\">if</span> word<span style=\"color: #666666\">.</span>lower() <span style=\"color: #AA22FF; font-weight: bold\">not</span> <span style=\"color: #AA22FF; font-weight: bold\">in</span> groups:\n            groups[word<span style=\"color: #666666\">.</span>lower()] <span style=\"color: #666666\">=</span> []\n        groups[word<span style=\"color: #666666\">.</span>lower()]<span style=\"color: #666666\">.</span>append(word)\n    <span style=\"color: #008000; font-weight: bold\">return</span> groups\n</code></pre></div>",
                "question_type": "true_false_question",
                "points_possible": 1,
                "answers": [
                    {
                        "answer_text": "True",
                        "answer_weight": 100
                    },
                    {
                        "answer_text": "False",
                        "answer_weight": 0
                    }
                ]
            },
            {
                "question_text": "<div class=\"codehilite\" style=\"background: #f8f8f8\"><pre style=\"line-height: 125%;\"><span></span><code><span style=\"color: #008000; font-weight: bold\">def</span> <span style=\"color: #0000FF\">make_groups</span>(text):\n    groups <span style=\"color: #666666\">=</span> {}\n    <span style=\"color: #008000; font-weight: bold\">for</span> word <span style=\"color: #AA22FF; font-weight: bold\">in</span> text<span style=\"color: #666666\">.</span>split():\n        word <span style=\"color: #666666\">=</span> word<span style=\"color: #666666\">.</span>strip(<span style=\"color: #BA2121\">'.,!?'</span>)\n        key <span style=\"color: #666666\">=</span> <span style=\"color: #008000\">len</span>(word<span style=\"color: #666666\">.</span>lower())\n        <span style=\"color: #008000; font-weight: bold\">if</span> key <span style=\"color: #AA22FF; font-weight: bold\">not</span> <span style=\"color: #AA22FF; font-weight: bold\">in</span> groups:\n            groups[key] <span style=\"color: #666666\">=</span> []\n        groups[key]<span style=\"color: #666666\">.</span>append(word)\n    <span style=\"color: #008000; font-weight: bold\">return</span> groups\n</code></pre></div>",
                "question_type": "true_false_question",
                "points_possible": 1,
                "answers": [
                    {
                        "answer_text": "True",
                        "answer_weight": 100
                    },
                    {
                        "answer_text": "False",
                        "answer_weight": 0
                    }
                ]
            },
            {
                "question_text": "<h1>Last Question</h1>\n<p>What does this expression evaluate to?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8\"><pre style=\"line-height: 125%;\"><span></span><code><span style=\"color: #666666\">1</span> <span style=\"color: #666666\">==</span> <span style=\"color: #BA2121\">\"pig\"</span>\n</code></pre></div>",
                "question_type": "true_false_question",
                "points_possible": 1,
                "answers": [
                    {
                        "answer_text": "True",
                        "answer_weight": 0
                    },
                    {
                        "answer_text": "False",
                        "answer_weight": 100
                    }
                ]
            }
        ],
        "quiz_type": "assignment",
        "resources": [],
        "scoring_policy": "keep_highest",
        "show_correct_answers": false,
        "show_correct_answers_last_attempt": false,
        "shuffle_answers": true,
        "time_limit": 240,
        "title": "Final",
        "type": "quiz",
        "unlock_at": "2024-04-19T00:00:00-06:00"
    }
]